/*

In this file:

// A. Modules
// B. Variables
// C. Selector Resets
// D. Form Entry Block
// E. Form Entry Elements
// F. Form Entry Modifiers
// G. Browser Behavior Modifications
// H. Form Entry within Nav
// I. Form Feedback and Alerts

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use "sass:map";
@use "../breakpoint/style" as breakpoint;
@use "../caret/style" as caret;
@use "../icon/style" as icon;

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

// Scoped to Root

:root {
    --form-field-padding-x: var(--spacer-3);
    --form-field-padding-y: var(--button-padding-y);

    --form-field-border-radius: 0.25em;
}

//////////////////////////////////////////////
// C. Selector Resets
//////////////////////////////////////////////

label,
.label,
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
select,
textarea {
    display: block;
    width: 100%;
    max-width: 100%;
    font-size: inherit;
    line-height: normal;
}

select {
    border-radius: unset;
    -moz-appearance: unset;
    -webkit-appearance: unset;
    appearance: unset;

    &::-ms-expand {
        display: none;
    }
}

input {
    margin: unset;
    padding: unset;

    &::-ms-clear {
        display: none;
        height: 0;
        width: 0;
    }
}

textarea {
    overflow: auto;
    vertical-align: top;
    resize: vertical;
}

button::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

legend {
    display: table;
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
    float: left;

    + * {
        clear: both;
    }

    color: inherit;

    line-height: normal;
    white-space: normal;
}

fieldset {
    display: table-cell;
    border: 0;
    padding: 0.01em 0 0 0;
    margin: 0;
    min-width: 0;
}

//////////////////////////////////////////////
// D. Form Entry Block
//////////////////////////////////////////////

.required-indicator {
    position: relative;
    text-align: right;
    padding: 0.25em 0.5em;
    border-radius: var(--form-field-border-radius);
    
    &::before {
        position: absolute;
        content: "";
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: currentColor;
        opacity: 0.05;
        border-radius: inherit;
    }

    [dir="rtl"] & {
        text-align: left;
    }
}

.required-indicator__text {
    font-style: italic;
    opacity: 0.8;
    font-size: var(--font-size-md);
}

.form-entry {

    select,
    textarea,
    input:not([type="radio"]):not([type="checkbox"]):not([type="file"]):not([type="range"]) {
        background-color: transparent;
        color: inherit;
        border-radius: inherit;
        border: 0;
        width: 100%;
    }

    button,
    fieldset {
        border: unset;
    }

    select option {
        color: currentColor !important;
    }

    ::placeholder {
        color: currentColor;
        opacity: 0.675;
        opacity: 0;
    }

    [dir="rtl"] & {
        text-align: right;
    }
}

.form-entry ~ .form-entry {
    margin-top: var(--spacer-4);
    margin-bottom: var(--spacer-4);
}

//////////////////////////////////////////////
// E. Form Entry Elements
//////////////////////////////////////////////


.form-entry__field {
    position: relative;

    display: flex;
    flex-direction: column;

    color: inherit;
}



.form-entry__field__label {
    padding-left: var(--form-field-padding-x);
    padding-right: var(--form-field-padding-x);
    margin-bottom: 0.5em;

    font-weight: var(--body-font-weight-bold);

    // Required Asterisk
    
    &::after {
        content: "*";
        margin: auto 0.25rem;
        display: none;

        [data-required="true"] & { 
            display: inline-block !important;
        }

    }
}

.form-entry__field__select,
.form-entry__field__input {
    position: relative;
    
    display: flex;
    align-items: center;

    border-radius: var(--form-field-border-radius);
    overflow: hidden;
    
    select, 
    input,
    textarea
    {
        padding: var(--form-field-padding-y) var(--form-field-padding-x);
        outline: none;
    }

    button {
        flex-shrink: 0;
    }

    > [class*="button--icon-only"] {
        border-radius: inherit;
        height: unset;
        width: unset;
        padding-left: var(--form-field-padding-x);
        padding-right: var(--form-field-padding-x);
        align-self: stretch;
    }

    > [class*="nyc_icon"] {
        margin-left: var(--form-field-padding-x);
        font-size: 75%;
    }

    &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;

        border-radius: inherit;
        pointer-events: none;
        
        box-shadow: inset 0 0 0 var(--default-border-width) currentColor;
        transition: box-shadow 200ms;
    }

    [dir="rtl"] & {
        > [class*="nyc_icon"] {
            margin-left: unset;
            margin-right: var(--form-field-padding-x);
        }
    }
}

[class*="primary-nav"] .form-entry__field__input::after {
    display: none;
}

.active .form-entry__field__select::after,
.active .form-entry__field__input::after,
.active .form-entry__option > div > label::after {
    box-shadow: inset 0 0 0 calc( var(--default-border-width) * 3) currentColor;
}

// Floating Labels

.form-entry__field--float {

    position: relative;

    .form-entry__field__label {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1000;

        pointer-events: none;

        padding-top: var(--form-field-padding-x);
        padding-bottom: var(--form-field-padding-x);

        margin-bottom: unset;
    }

    .active &, 
    .has-value & {

        [class*="form-entry__field__"] {
            select, 
            input,
            textarea
            {
                padding-top: calc( var(--form-field-padding-x) * 1.5);
                padding-bottom: calc( var(--form-field-padding-x) * 0.5);
            }

            select option:first-child {
                display: none;
            }
        }

        .form-entry__field__label {
            padding: 0;

            top: calc( var(--form-field-padding-y) * 0.5);
            right: unset;
            bottom: unset;
            
            margin-left: var(--form-field-padding-x);
            margin-right: var(--form-field-padding-x);

            font-size: 0.7em;

            [dir="rtl"] & {
                transform-origin: top right;
                left: unset;
            }
        }

    }
}

.form-entry__help {
    font-size: 0.8em;
    padding-left: var(--form-field-padding-x);
    padding-right: var(--form-field-padding-x);
    margin-top: var(--spacer-2);
}

.form-entry__field__select {
    position: relative;

    &::before {
        content: "";
        @include caret.caret-icon;
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
        margin-left: var(--form-field-padding-x);
        margin-right: var(--form-field-padding-x);
    }

}

.form-entry__field__select::before {
    [dir="rtl"] & {
        right: unset;
        left: 0;
    }
}

//////////////////////////////////////////////
// F. Form Feedback and Alerts
//////////////////////////////////////////////

[data-alert="form-errors"],
.form-entry__feedback {
    display: none;
}

.form-entry__feedback {
    order: 3;

    padding-left: var(--form-field-padding-x);
    padding-right: var(--form-field-padding-x);
    margin-top: 0.5rem;

    > small {
        font-size: 80%;
        display: flex;
        align-items: center;
    }

    > small > strong {
        margin-left: var(--spacer-2);
        margin-right: var(--spacer-2);
    }
}

.is-invalid {
    .form-entry__feedback {
        display: block;
    }
}

//////////////////////////////////////////////
// G. Checkbox and Radio Elements
//////////////////////////////////////////////

.form-entry__option {
    position: relative;
    display: flex;
    flex-direction: column;

    border-style: var(--default-border-style);
    border-width: var(--default-border-width);

    > div {
        padding: var(--form-field-padding-y) var(--form-field-padding-x);
        position: relative;
    }

    > div:not(:last-child) {
        border-bottom-width: var(--default-border-width);
        border-bottom-style: var(--default-border-style);
        border-bottom-color: inherit;
    }

    > div > label {
        position: relative;

        &::before {
            content: "";
            position: absolute;
            top: calc(var(--form-field-padding-y) * -1);
            left: calc(var(--form-field-padding-x) * -1);
            bottom: calc(var(--form-field-padding-y) * -1);
            right: calc(var(--form-field-padding-x) * -1);

            pointer-events: inherit;
            opacity: 0.05;
        }

        &.active::before {
            background-color: currentColor;
        }
    }
}

@each $breakpoint in map.keys(breakpoint.$breakpoints) {
    @include breakpoint.breakpoints-up($breakpoint) {
        $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);
        
        .form-entry__option.option--horizontal#{$mod} {
            flex-direction: row;
            align-items: stretch;

            > div {
                flex: 1;
                border-bottom-style: none !important; // Thanks, IE.
            }

            > div:not(:last-child){
                border-right-width: var(--default-border-width);
                border-right-style: var(--default-border-style);

                [dir="rtl"] & {
                    border-right-width: 0;
                    border-left-width: var(--default-border-width);
                    border-left-style: var(--default-border-style);
                }
            }
        }

    }
}

// Shared Styles

.form-entry__option__radio,
.form-entry__option__check, 
.form-entry__option__switch {
    position: relative;
    color: inherit;
    display: flex;
    align-items: baseline;
    padding-left: 1.25em;
    width: auto;
    cursor: pointer;

    [dir="rtl"] & {
        padding-left: unset;
        padding-right: 1.25em;
    }
}

.form-entry__option__radio > input[type="radio"],
.form-entry__option__check > input[type="checkbox"],
.form-entry__option__switch > input[type="checkbox"]  {
    background-color: transparent;
    opacity: 0;
} 

.form-entry__option__radio > input ~ .radio__label,
.form-entry__option__check > input ~ .check__label,
.form-entry__option__switch > input ~ .switch__label {
    line-height: var(--body-line-height);

    &::before {
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0.5;

        font-size: 125%;
        margin-top: -0.125em;

        @extend .nyc_icon_font;
    }
}


// Form Option Radio

.form-entry__option__radio > input ~ .radio__label::before{
    content: "\e948";
}

.form-entry__option__radio > input:checked ~ .radio__label::before{
    content: "\e949";
}

// Form Option Check

.form-entry__option__check > input ~ .check__label::before {
    content: "\e946";
}

.form-entry__option__check > input:checked ~ .check__label::before {
    content: "\e947";
}

// Form Option Switch

.form-entry__option__switch > input ~ .switch__label::before {
    content: "\e95f";
}

.form-entry__option__switch > input:checked ~ .switch__label::before {
    content: "\e960";
}

// Form Option Disabled

.form-entry__option__radio > input:disabled ~ .radio__label::before,
.form-entry__option__check > input:disabled ~ .check__label::before, 
.form-entry__option__switch > input:disabled ~ .switch__label::before 
{
    content: "\e95e";
}


.form-entry__option__radio.disabled,
.form-entry__option__check.disabled,
.form-entry__option__switch.disabled
{
    cursor: not-allowed;

    [class*="__label"] {
        opacity: 0.625;
    }

}

// Focus State

.form-entry__option__radio > input:focus ~ .radio__label,
.form-entry__option__check > input:focus ~ .check__label,
.form-entry__option__switch > input:focus ~ .check__label {
    text-decoration: underline;
    &::before{
        opacity: 0.75;
    }
}


// Checked State

.form-entry__option__radio > input:checked ~ .radio__label,
.form-entry__option__check > input:checked ~ .check__label,
.form-entry__option__switch > input:checked ~ .switch__label {
    &::before{
        opacity: 1;
    }
}

// RTL

[dir="rtl"] {
    .form-entry__option__radio > .radio__label::before,
    .form-entry__option__radio > input[type="radio"],

    .form-entry__option__check > .check__label::before,
    .form-entry__option__check > input[type="checkbox"],     

    .form-entry__option__switch > .switch__label::before,
    .form-entry__option__switch > input[type="checkbox"]
    {
        left: unset;
        right: 0;
    }
}

//////////////////////////////////////////////
// G. Input Toggle Switch
//////////////////////////////////////////////

.toggle-switch {
    --toggle-switch-width: 5rem;
    --toggle-switch-transition: 0.3s;
    --toggle-switch-active-color: var(--primary);

    position: relative;
    display: inline-block;

    width: var(--toggle-switch-width); 
    height: calc(var(--toggle-switch-width) * 0.5);

    input[type="checkbox"] { 
        background-color: transparent;
        opacity: 0;
    }

    .toggle-switch__slider {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;

        cursor: pointer;

        &::before,
        &::after
        {
            position: absolute;
            content: "";
            transition: var(--toggle-switch-transition);
        }

        &::before {
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: currentColor;
            opacity: 0.375;

            border-radius: calc(var(--toggle-switch-width) * 0.5);
        }

        &::after {
            height: calc(var(--toggle-switch-width) * 0.4);
            width: calc(var(--toggle-switch-width) * 0.4);
            top: calc(var(--toggle-switch-width) * 0.05);
            left: calc(var(--toggle-switch-width) * 0.05);
            background-color: white;

            border-radius: 100%;
        }
    }

    input:checked + .toggle-switch__slider::before {
        opacity: 1;
        background-color: var(--toggle-switch-active-color);
    }

    input:checked + .toggle-switch__slider::after {
        transform: translateX(calc(var(--toggle-switch-width) * 0.5));
    }

    input:focus + .toggle-switch__slider {
        // box-shadow: 0 0 4px 1px var(--toggle-switch-active-color);
    }
}


