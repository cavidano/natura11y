//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use 'sass:map';
@use 'sass:math';
@use './breakpoint';
@use './spacing';

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

:root {
    --visible-panels: 1;

    --panel-peeking: calc(var(--container-padding-x) * 4);
}

$track-panels: 6;

//////////////////////////////////////////////
// C. Component
//////////////////////////////////////////////

@layer component {

    // Track Block

    .track,
    .track__container {
        position: relative;
    }

    .track {
        display: grid;

        gap: var(--gap-size, var(--spacer-2));

        
        ul {
            list-style: none;
        }
    }

    // Track Container

    .track__container {
        position: relative;
        overflow: hidden;

        .track__prev,
        .track__next {
            container-type: inline-size;

            position: absolute;
            inset-block-start: 50%;

            transform: translateY(-50%);
            
            display: flex;
            justify-content: center;

            width: max(var(--button-target-size), var(--panel-peeking));

            z-index: 20;
        }

        .track__prev {
            inset-inline-start: calc(var(--button-target-size) * 0.5);
            justify-content: end;
        }

        .track__next {
            inset-inline-end:  calc(var(--button-target-size) * 0.5);
            justify-content: start;
        }
    }

    // Track Panels (Scrollable <ul>)

    .track__panels {  
        position: relative;

        display: grid;

        grid-auto-columns: calc((100% / var(--visible-panels)) - (var(--gap-size, 0px) * ((var(--visible-panels) - 1) / var(--visible-panels))));

        grid-auto-flow: column;

        gap: var(--gap-size);

        overflow-x: auto;

        scroll-snap-type: inline mandatory;
        scroll-behavior: smooth;

        /* Hide scrollbars */
        scrollbar-width: none;
        -ms-overflow-style: none;

        li {
            position: relative;
        }
            
        &::-webkit-scrollbar{
            display: none;
        }
    }

    .track__panel {
        position: relative;

        display: flex;
        flex-direction: column;

        scroll-snap-align: start;

        > *:is(img, video) {
            width: 100%;
            height: auto;
        }
    }

    // Track Controls

    .track__controls {
        --track-control-layout: "pagination prev next";
        --track-control-columns: 1fr auto auto;
        
        display: grid;
        align-items: center;
        
        gap: 0.75em;
        grid-template-columns: var(--track-control-columns);
        grid-template-areas: var(--track-control-layout);

        .track__pagination {
            grid-area: pagination;
        }

        .track__prev {
            grid-area: prev;
        }

        .track__next {
            grid-area: next;
        }
    }

    .track__pagination {
        --_justify-pages: start;
        display: flex;
        justify-content: var(--_justify-pages);
        
        gap: 0.75em;

        counter-reset: page-counter;

        [data-page-index] {
            --_size: calc(var(--button-target-size) * 0.675);

            container-type: inline-size;

            display: flex;
            justify-content: center;
            align-items: center;

            width: var(--_size);

            aspect-ratio: 1 / 1;

            background-color: currentColor;
            border-radius: var(--button-border-radius);

            cursor: pointer;

            // counter-increment: page-counter;

            &::before {
                // content: counter(page-counter);
                
                font-weight: var(--font-weight-bold);

                display: none;
            }

            &:is(
                .active,
                [aria-current='true']) 
            {
                --border-color: currentColor;

                background-color: transparent;

                border-width: calc(var(--border-width) * 2);
                border-style: var(--border-style);

                &::before {
                    display: flex;
                }
            }
            
            &:focus-visible {
                outline: calc(var(--border-width) * 2) solid currentColor !important;
                outline-offset: calc(var(--border-width) * 3) !important;
            }
        }
    }

    // Track Peeking Modifier
    
    .track--peeking {
        --_peeking: var(--panel-peeking);

        .track__container {
            position: relative;
            
            &::before,
            &::after {
                content: '';
                position: absolute;
                inset-block: 0;
                width: var(--panel-peeking);
                background: var(--background-color);

                opacity: 0.5;

                z-index: 10;
            }

            &::before {
                inset-inline-start: 0;
            }

            &::after {
                inset-inline-end: 0;
            }
        }

        .track__panels {
            padding-inline: var(--panel-peeking);
        }

        .track__panel {
            scroll-margin: var(--panel-peeking);
        }

        > .track__pagination {
            --_justify-pages: center;
            
            margin-inline: var(--panel-peeking);
        }
    }

    // Hide Controls (via JavaScript)
    
    .hide-controls :is(
        .track__controls,
        .track__prev,
        .track__next,
        .track__pagination
    ) {
        --_peeking: 0;
        
        display: none;
    }

    // Generate responsive utility classes for different numbers of visible panels
    @each $breakpoint in map.keys(breakpoint.$breakpoints) {
        @include breakpoint.breakpoint-up($breakpoint) {
            $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

            @for $i from 1 through $track-panels {
                .track--column-#{$i}#{$mod} {
                    --visible-panels: #{$i};
                }
            }
        }
    }

} // end @layer