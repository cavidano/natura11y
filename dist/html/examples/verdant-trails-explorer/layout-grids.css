
:root {
  --layout-grid-columns: 12; /* Same as defined in Naturally's Grid System */

  --column-gutter: var(--gap, 16px);
  
  --layout-grid-square-size: 8px;

  --grid-color: hsla(0, 100%, 50%, 0.25);
  --column-color: hsla(225, 100%, 50%, 0.25);
}

.helper-layout-grids {

  --wide-width: 1600px;

  &::before,
  &::after {
    content: "";
    position: fixed; 
    inset: 0;
    pointer-events: none; 
    z-index: 9999; 
    max-width: calc(var(--wide-width) - var(--container-padding-x) * 2)  ;

    margin: auto;
  }

  &::before {
    background: 
      repeating-linear-gradient(
        0deg,
        transparent 0,
        transparent calc(var(--layout-grid-square-size) - 1px),
        var(--grid-color) calc(var(--layout-grid-square-size) - 1px),
        var(--grid-color) var(--layout-grid-square-size)
      ),
      repeating-linear-gradient(
        90deg,
        transparent 0,
        transparent calc(var(--layout-grid-square-size) - 1px),
        var(--grid-color) calc(var(--layout-grid-square-size) - 1px),
        var(--grid-color) var(--layout-grid-square-size)
      );
  }

  &::after {
    background: 
      repeating-linear-gradient(
        to right, 
        var(--column-color), 
        var(--column-color) calc((100% - var(--column-gutter) var(--gap, ) * (var(--layout-grid-columns) - 1)) / var(--layout-grid-columns)), 
        transparent calc((100% - var(--column-gutter) var(--gap, ) * (var(--layout-grid-columns) - 1)) / var(--layout-grid-columns)), 
        transparent calc((100% - var(--column-gutter) var(--gap, ) * (var(--layout-grid-columns) - 1)) / var(--layout-grid-columns) + var(--column-gutter) var(--gap, ))
      );

    mix-blend-mode: difference;
  }
}